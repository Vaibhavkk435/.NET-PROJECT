// <auto-generated />
using System;
using FoodDeliveryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Food_Delivery.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250907054140_AddTwoMoreRestaurants")]
    partial class AddTwoMoreRestaurants
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("FoodDeliveryApp.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Delicious grilled paneer with spices",
                            ImageUrl = "/images/Paneer Tikka.webp",
                            Name = "Paneer Tikka",
                            Price = 220m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Aromatic basmati rice with mixed vegetables",
                            ImageUrl = "/images/Veg Biryani.webp",
                            Name = "Veg Biryani",
                            Price = 180m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Juicy beef patty with fresh vegetables",
                            ImageUrl = "/images/Burger bean.webp",
                            Name = "Classic Burger",
                            Price = 150m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Fresh tomato sauce, mozzarella, and basil",
                            ImageUrl = "/images/burger-pic.avif",
                            Name = "Margherita Pizza",
                            Price = 280m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 5,
                            Description = "Classic pepperoni with mozzarella cheese",
                            ImageUrl = "/images/burger-pic.avif",
                            Name = "Pepperoni Pizza",
                            Price = 320m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Tender chicken in rich spicy gravy",
                            ImageUrl = "/images/Paneer Tikka.webp",
                            Name = "Chicken Curry",
                            Price = 250m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 7,
                            Description = "Yellow lentils with aromatic spices",
                            ImageUrl = "/images/Veg Biryani.webp",
                            Name = "Dal Tadka",
                            Price = 120m,
                            RestaurantId = 4
                        });
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "MG Road",
                            ImageUrl = "/images/spice lab.jpg",
                            Name = "Spice Hub"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Park Street",
                            ImageUrl = "/images/Burger bean.webp",
                            Name = "Burger Bean"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Central Mall",
                            ImageUrl = "/images/burger-pic.avif",
                            Name = "Pizza Palace"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Food Street",
                            ImageUrl = "/images/spice lab.jpg",
                            Name = "Curry Express"
                        });
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.MenuItem", b =>
                {
                    b.HasOne("FoodDeliveryApp.Models.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.OrderItem", b =>
                {
                    b.HasOne("FoodDeliveryApp.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApp.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Restaurant", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
